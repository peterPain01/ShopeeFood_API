version: "3.7"

services:
    nginx: 
        image: nginx:stable-alpine
        ports:
            - "3001:80"
        volumes:
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            - node-app
    node-app:
        build: 
            context: .
        volumes:
            - ./:/app
            - /app/node_modules
        env_file:
            - path: ./.env
        restart: unless-stopped
        depends_on:
            - redis
            - mongodb
        expose:
            - "1234"

    mongodb: 
        image: mongo
        container_name: mongodb
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
            - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
        ports: 
        - 27017:27017
        volumes:
            - mongo-db:/data/db
    redis:
        image: redis:5-alpine
        container_name: redis
        volumes:
            - .docker/data/redis:/data
        restart: unless-stopped
    kafka: 
        image: docker.io/bitnami/kafka:3.5 
        ports: 
        - "9092:9092" 
        volumes: 
        - "kafka_data:/bitnami" 
        environment: 
        # KRaft settings 
        - KAFKA_CFG_NODE_ID=0 
        - KAFKA_CFG_PROCESS_ROLES=controller,broker 
        - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093 
        # Listeners 
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093 
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092 
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT 
        - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER 
        - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT 

volumes:
    kafka_data: 
        driver: local 
    mongo-db:

   
